README

This program 2StringLCS takes two strings, which can be either a character or a number, as an input and returns the Longest Common Subsequence (LCS) of the two strings. It also returns the size (or length) of the LCS.

The program is written in Python and can be made to run on Command Line as well as Python IDE.



INPUT

X = '6541254939322816220209974565477289648317'
Y = '3142522751761601737419090933147067701840'

OUTPUT

Longest Common Subsequence (LCS) of the two strings is : 12522160099467784
Size of the TwoStringsLCS is : 17



SOURCE CODE- 

def TwoStringsLCS(X, Y, a, b):
    global j, i
    Length = [[0 for X in range(b + 1)] for Y in range(a + 1)]
    for i in range(a + 1):
        for j in range(b + 1):
            if i == 0 or j == 0:
                Length[i][j] = 0
            elif X[i - 1] == Y[j - 1]:
                Length[i][j] = Length[i - 1][j - 1] + 1
            else:
                Length[i][j] = max(Length[i - 1][j], Length[i][j - 1])

    LCS_Array = [""] * (Length[a][b] + 1)
    LCS_Array[Length[a][b]] = ""

    while j > 0 and i > 0:

        if Length[i - 1][j] > Length[i][j - 1]:
            i = i - 1

        elif X[i - 1] == Y[j - 1]:
            LCS_Array[Length[a][b] - 1] = X[i - 1]
            i = i - 1
            j = j - 1
            Length[a][b] = Length[a][b] - 1
        else:
            j = j - 1

    size_of_LCS = len(LCS_Array)-1
    print("Longest Common Subsequence (LCS) of the two strings is : " + "".join(LCS_Array))
    print("Size of the TwoStringsLCS is :", size_of_LCS)

X = '6541254939322816220209974565477289648317'
Y = '3142522751761601737419090933147067701840'

TwoStringsLCS(X, Y, len(Y), len(X))